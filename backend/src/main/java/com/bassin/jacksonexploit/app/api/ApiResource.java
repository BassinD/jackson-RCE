package com.bassin.jacksonexploit.app.api;

import java.io.*;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;

import org.glassfish.jersey.media.multipart.FormDataContentDisposition;
import org.glassfish.jersey.media.multipart.FormDataParam;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.CrossOrigin;

import com.fasterxml.jackson.databind.ObjectMapper;

@XmlAccessorType(XmlAccessType.NONE)
@Path("")
@Service
@CrossOrigin
public class ApiResource {

	@POST
	@Consumes(MediaType.MULTIPART_FORM_DATA)
	@Produces(MediaType.APPLICATION_JSON)
	@Path("/files/upload")
	public Response uploadFile(@FormDataParam("file") InputStream file,
							   @FormDataParam("file") FormDataContentDisposition fileDetail) {

		ObjectMapper mapper = new ObjectMapper();
		mapper.enableDefaultTyping();

		try {
			Inner i = mapper.readValue(file, Inner.class);
			// do something with the JSON file
			return Response.ok(i).build();

		} catch (IOException e) {
			return Response.status(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(), e.toString()).build();
		}

	}
}

class Inner {
	public int id;
	public Object obj;
}